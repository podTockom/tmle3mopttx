% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmle3_Spec_mopttx_vim.R
\name{tmle3_Spec_mopttx_vim}
\alias{tmle3_Spec_mopttx_vim}
\title{Defines a TMLE for the Mean Under the Optimal Individualized Rule with
Categorical Treatment and contrast with the Mean under Observed Treatment.}
\description{
Defines a TMLE for the Mean Under the Optimal Individualized Rule with
Categorical Treatment and contrast with the Mean under Observed Treatment.

Defines a TMLE for the Mean Under the Optimal Individualized Rule with
Categorical Treatment and contrast with the Mean under Observed Treatment.
}
\section{Super classes}{
\code{\link[tmle3:tmle3_Spec]{tmle3::tmle3_Spec}} -> \code{\link[tmle3mopttx:tmle3_Spec_mopttx_blip_revere]{tmle3mopttx::tmle3_Spec_mopttx_blip_revere}} -> \code{tmle3_Spec_mopttx_vim}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{tmle3_Spec_mopttx_vim$new()}}
\item \href{#method-vals_from_factor}{\code{tmle3_Spec_mopttx_vim$vals_from_factor()}}
\item \href{#method-make_tmle_task}{\code{tmle3_Spec_mopttx_vim$make_tmle_task()}}
\item \href{#method-set_opt}{\code{tmle3_Spec_mopttx_vim$set_opt()}}
\item \href{#method-make_params}{\code{tmle3_Spec_mopttx_vim$make_params()}}
\item \href{#method-clone}{\code{tmle3_Spec_mopttx_vim$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="tmle3" data-topic="tmle3_Spec" data-id="make_initial_likelihood">}\href{../../tmle3/html/tmle3_Spec.html#method-make_initial_likelihood}{\code{tmle3::tmle3_Spec$make_initial_likelihood()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tmle3" data-topic="tmle3_Spec" data-id="make_targeted_likelihood">}\href{../../tmle3/html/tmle3_Spec.html#method-make_targeted_likelihood}{\code{tmle3::tmle3_Spec$make_targeted_likelihood()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tmle3" data-topic="tmle3_Spec" data-id="make_updater">}\href{../../tmle3/html/tmle3_Spec.html#method-make_updater}{\code{tmle3::tmle3_Spec$make_updater()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tmle3mopttx" data-topic="tmle3_Spec_mopttx_blip_revere" data-id="data_adapt_psi">}\href{../../tmle3mopttx/html/tmle3_Spec_mopttx_blip_revere.html#method-data_adapt_psi}{\code{tmle3mopttx::tmle3_Spec_mopttx_blip_revere$data_adapt_psi()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tmle3mopttx" data-topic="tmle3_Spec_mopttx_blip_revere" data-id="make_est_fin">}\href{../../tmle3mopttx/html/tmle3_Spec_mopttx_blip_revere.html#method-make_est_fin}{\code{tmle3mopttx::tmle3_Spec_mopttx_blip_revere$make_est_fin()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tmle3mopttx" data-topic="tmle3_Spec_mopttx_blip_revere" data-id="make_rules">}\href{../../tmle3mopttx/html/tmle3_Spec_mopttx_blip_revere.html#method-make_rules}{\code{tmle3mopttx::tmle3_Spec_mopttx_blip_revere$make_rules()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tmle3mopttx" data-topic="tmle3_Spec_mopttx_blip_revere" data-id="predict_rule">}\href{../../tmle3mopttx/html/tmle3_Spec_mopttx_blip_revere.html#method-predict_rule}{\code{tmle3mopttx::tmle3_Spec_mopttx_blip_revere$predict_rule()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="tmle3mopttx" data-topic="tmle3_Spec_mopttx_blip_revere" data-id="set_rule">}\href{../../tmle3mopttx/html/tmle3_Spec_mopttx_blip_revere.html#method-set_rule}{\code{tmle3mopttx::tmle3_Spec_mopttx_blip_revere$set_rule()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tmle3_Spec_mopttx_vim$new(
  V = NULL,
  type = "blip2",
  method = "SL",
  learners = NULL,
  contrast = "linear",
  maximize = TRUE,
  complex = TRUE,
  realistic = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-vals_from_factor"></a>}}
\if{latex}{\out{\hypertarget{method-vals_from_factor}{}}}
\subsection{Method \code{vals_from_factor()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tmle3_Spec_mopttx_vim$vals_from_factor(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-make_tmle_task"></a>}}
\if{latex}{\out{\hypertarget{method-make_tmle_task}{}}}
\subsection{Method \code{make_tmle_task()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tmle3_Spec_mopttx_vim$make_tmle_task(data, node_list, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_opt"></a>}}
\if{latex}{\out{\hypertarget{method-set_opt}{}}}
\subsection{Method \code{set_opt()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tmle3_Spec_mopttx_vim$set_opt(opt)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-make_params"></a>}}
\if{latex}{\out{\hypertarget{method-make_params}{}}}
\subsection{Method \code{make_params()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tmle3_Spec_mopttx_vim$make_params(tmle_task, likelihood)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tmle3_Spec_mopttx_vim$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
