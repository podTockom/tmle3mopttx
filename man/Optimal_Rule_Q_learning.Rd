% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Optimal_Rule_Q_learning.R
\name{Optimal_Rule_Q_learning}
\alias{Optimal_Rule_Q_learning}
\title{Learns the Optimal Rule given a tmle_task and likelihood, using Q learning.}
\description{
Learns the Optimal Rule given a tmle_task and likelihood, using Q learning.

Learns the Optimal Rule given a tmle_task and likelihood, using Q learning.
}
\section{Super class}{
\code{\link[tmle3:tmle3_Spec]{tmle3::tmle3_Spec}} -> \code{Optimal_Rule_Q_learning}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Optimal_Rule_Q_learning-new}{\code{Optimal_Rule_Q_learning$new()}}
\item \href{#method-Optimal_Rule_Q_learning-fit_blip}{\code{Optimal_Rule_Q_learning$fit_blip()}}
\item \href{#method-Optimal_Rule_Q_learning-rule}{\code{Optimal_Rule_Q_learning$rule()}}
\item \href{#method-Optimal_Rule_Q_learning-clone}{\code{Optimal_Rule_Q_learning$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="tmle3" data-topic="tmle3_Spec" data-id="make_initial_likelihood"><a href='../../tmle3/html/tmle3_Spec.html#method-tmle3_Spec-make_initial_likelihood'><code>tmle3::tmle3_Spec$make_initial_likelihood()</code></a></li>
<li><span class="pkg-link" data-pkg="tmle3" data-topic="tmle3_Spec" data-id="make_params"><a href='../../tmle3/html/tmle3_Spec.html#method-tmle3_Spec-make_params'><code>tmle3::tmle3_Spec$make_params()</code></a></li>
<li><span class="pkg-link" data-pkg="tmle3" data-topic="tmle3_Spec" data-id="make_targeted_likelihood"><a href='../../tmle3/html/tmle3_Spec.html#method-tmle3_Spec-make_targeted_likelihood'><code>tmle3::tmle3_Spec$make_targeted_likelihood()</code></a></li>
<li><span class="pkg-link" data-pkg="tmle3" data-topic="tmle3_Spec" data-id="make_tmle_task"><a href='../../tmle3/html/tmle3_Spec.html#method-tmle3_Spec-make_tmle_task'><code>tmle3::tmle3_Spec$make_tmle_task()</code></a></li>
<li><span class="pkg-link" data-pkg="tmle3" data-topic="tmle3_Spec" data-id="make_updater"><a href='../../tmle3/html/tmle3_Spec.html#method-tmle3_Spec-make_updater'><code>tmle3::tmle3_Spec$make_updater()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Optimal_Rule_Q_learning-new"></a>}}
\if{latex}{\out{\hypertarget{method-Optimal_Rule_Q_learning-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimal_Rule_Q_learning$new(tmle_task, likelihood, maximize = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Optimal_Rule_Q_learning-fit_blip"></a>}}
\if{latex}{\out{\hypertarget{method-Optimal_Rule_Q_learning-fit_blip}{}}}
\subsection{Method \code{fit_blip()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimal_Rule_Q_learning$fit_blip()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Optimal_Rule_Q_learning-rule"></a>}}
\if{latex}{\out{\hypertarget{method-Optimal_Rule_Q_learning-rule}{}}}
\subsection{Method \code{rule()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimal_Rule_Q_learning$rule(tmle_task, fold_number = "full")}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Optimal_Rule_Q_learning-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Optimal_Rule_Q_learning-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Optimal_Rule_Q_learning$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
